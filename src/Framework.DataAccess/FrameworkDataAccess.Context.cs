//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FrameworkDataAccessContainer1 : DbContext
    {
        public FrameworkDataAccessContainer1()
            : base("name=FrameworkDataAccessContainer1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CustomerInfo> CustomerInfoes { get; set; }
        public virtual DbSet<CustomerType> CustomerTypes { get; set; }
    
        public virtual int CustomerInfoDelete(Nullable<int> iD, Nullable<int> activityContextID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var activityContextIDParameter = activityContextID.HasValue ?
                new ObjectParameter("ActivityContextID", activityContextID) :
                new ObjectParameter("ActivityContextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerInfoDelete", iDParameter, activityContextIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CustomerInfoInsert(string firstName, string middleName, string lastName, Nullable<System.DateTime> birthDate, Nullable<int> genderID, Nullable<System.Guid> customerTypeKey, Nullable<int> activityContextID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var genderIDParameter = genderID.HasValue ?
                new ObjectParameter("GenderID", genderID) :
                new ObjectParameter("GenderID", typeof(int));
    
            var customerTypeKeyParameter = customerTypeKey.HasValue ?
                new ObjectParameter("CustomerTypeKey", customerTypeKey) :
                new ObjectParameter("CustomerTypeKey", typeof(System.Guid));
    
            var activityContextIDParameter = activityContextID.HasValue ?
                new ObjectParameter("ActivityContextID", activityContextID) :
                new ObjectParameter("ActivityContextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CustomerInfoInsert", firstNameParameter, middleNameParameter, lastNameParameter, birthDateParameter, genderIDParameter, customerTypeKeyParameter, activityContextIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CustomerInfoUpdate(Nullable<int> iD, string firstName, string middleName, string lastName, Nullable<System.DateTime> birthDate, Nullable<int> genderID, Nullable<System.Guid> customerTypeKey, Nullable<int> activityContextID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var genderIDParameter = genderID.HasValue ?
                new ObjectParameter("GenderID", genderID) :
                new ObjectParameter("GenderID", typeof(int));
    
            var customerTypeKeyParameter = customerTypeKey.HasValue ?
                new ObjectParameter("CustomerTypeKey", customerTypeKey) :
                new ObjectParameter("CustomerTypeKey", typeof(System.Guid));
    
            var activityContextIDParameter = activityContextID.HasValue ?
                new ObjectParameter("ActivityContextID", activityContextID) :
                new ObjectParameter("ActivityContextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CustomerInfoUpdate", iDParameter, firstNameParameter, middleNameParameter, lastNameParameter, birthDateParameter, genderIDParameter, customerTypeKeyParameter, activityContextIDParameter);
        }
    
        public virtual int ExceptionLogInsert(Nullable<int> activityContextID)
        {
            var activityContextIDParameter = activityContextID.HasValue ?
                new ObjectParameter("ActivityContextID", activityContextID) :
                new ObjectParameter("ActivityContextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExceptionLogInsert", activityContextIDParameter);
        }
    }
}
